# The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?


import math

def isPrime(_x):

    if _x % 2 == 0 and _x != 2:
        return False

    for i in range(3, int(math.sqrt(_x)) + 1):
        if _x % i == 0:
            return False
        
    return True

def get_count_dividers(_num):
    dividers = {}

    for i in range(2, _num + 1):
        if isPrime(i):
            while _num % i == 0:
                _num /= i

                if i in dividers:
                    dividers[i] += 1
                else:
                    dividers[i] = 1
        
        if _num == 1:
            break

    dividers_count = 1

    for k, v in dividers.items():
        v += 1
        dividers_count *= v
        
    return dividers_count


num = 1
summ = 1

while get_count_dividers(summ) < 500:
    num += 1
    summ += num

print(summ)